{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding\\\\chinesestudy\\\\src\\\\components\\\\Navigation.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Navigation = ({\n  availableDates,\n  selectedMonth,\n  selectedDate,\n  onMonthChange,\n  onDateChange\n}) => {\n  const months = [...new Set(availableDates.map(date => date.substring(0, 7)))]; // 2025-08\n  const currentMonthDates = availableDates.filter(date => date.startsWith(selectedMonth));\n  console.log(`Current month dates: ${currentMonthDates}`);\n  const formatMonth = month => {\n    const [year, monthNum] = month.split('-');\n    return `${year}년 ${monthNum}월`;\n  };\n  const formatDate = date => {\n    const day = date.split('-')[2];\n    return `${day}일`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"navigation\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"month-selector\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"month-select\",\n        children: \"\\uC6D4 \\uC120\\uD0DD:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"month-select\",\n        value: selectedMonth,\n        onChange: e => onMonthChange(e.target.value),\n        children: months.map(month => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: month,\n          children: formatMonth(month)\n        }, month, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"date-tabs\",\n      children: currentMonthDates.map(date => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `date-tab ${selectedDate === date ? 'active' : ''}`,\n        onClick: () => onDateChange(date),\n        children: formatDate(date)\n      }, date, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_c = Navigation;\nexport default Navigation;\nvar _c;\n$RefreshReg$(_c, \"Navigation\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Navigation","availableDates","selectedMonth","selectedDate","onMonthChange","onDateChange","months","Set","map","date","substring","currentMonthDates","filter","startsWith","console","log","formatMonth","month","year","monthNum","split","formatDate","day","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["D:/Coding/chinesestudy/src/components/Navigation.tsx"],"sourcesContent":["import React from 'react';\n\ninterface NavigationProps {\n  availableDates: string[];\n  selectedMonth: string;\n  selectedDate: string;\n  onMonthChange: (month: string) => void;\n  onDateChange: (date: string) => void;\n}\n\nconst Navigation: React.FC<NavigationProps> = ({\n  availableDates,\n  selectedMonth,\n  selectedDate,\n  onMonthChange,\n  onDateChange,\n}) => {\n  const months = [...new Set(availableDates.map(date => date.substring(0, 7)))]; // 2025-08\n  const currentMonthDates = availableDates.filter(date => date.startsWith(selectedMonth));\n  console.log(`Current month dates: ${currentMonthDates}`);\n\n  const formatMonth = (month: string) => {\n    const [year, monthNum] = month.split('-');\n    return `${year}년 ${monthNum}월`;\n  };\n\n  const formatDate = (date: string) => {\n    const day = date.split('-')[2];\n    return `${day}일`;\n  };\n\n  return (\n    <nav className=\"navigation\">\n      <div className=\"month-selector\">\n        <label htmlFor=\"month-select\">월 선택:</label>\n        <select \n          id=\"month-select\"\n          value={selectedMonth} \n          onChange={(e) => onMonthChange(e.target.value)}\n        >\n          {months.map(month => (\n            <option key={month} value={month}>\n              {formatMonth(month)}\n            </option>\n          ))}\n        </select>\n      </div>\n      \n      <div className=\"date-tabs\">\n        {currentMonthDates.map(date => (\n          <button\n            key={date}\n            className={`date-tab ${selectedDate === date ? 'active' : ''}`}\n            onClick={() => onDateChange(date)}\n          >\n            {formatDate(date)}\n          </button>\n        ))}\n      </div>\n    </nav>\n  );\n};\n\nexport default Navigation;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAU1B,MAAMC,UAAqC,GAAGA,CAAC;EAC7CC,cAAc;EACdC,aAAa;EACbC,YAAY;EACZC,aAAa;EACbC;AACF,CAAC,KAAK;EACJ,MAAMC,MAAM,GAAG,CAAC,GAAG,IAAIC,GAAG,CAACN,cAAc,CAACO,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC/E,MAAMC,iBAAiB,GAAGV,cAAc,CAACW,MAAM,CAACH,IAAI,IAAIA,IAAI,CAACI,UAAU,CAACX,aAAa,CAAC,CAAC;EACvFY,OAAO,CAACC,GAAG,CAAC,wBAAwBJ,iBAAiB,EAAE,CAAC;EAExD,MAAMK,WAAW,GAAIC,KAAa,IAAK;IACrC,MAAM,CAACC,IAAI,EAAEC,QAAQ,CAAC,GAAGF,KAAK,CAACG,KAAK,CAAC,GAAG,CAAC;IACzC,OAAO,GAAGF,IAAI,KAAKC,QAAQ,GAAG;EAChC,CAAC;EAED,MAAME,UAAU,GAAIZ,IAAY,IAAK;IACnC,MAAMa,GAAG,GAAGb,IAAI,CAACW,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC9B,OAAO,GAAGE,GAAG,GAAG;EAClB,CAAC;EAED,oBACEvB,OAAA;IAAKwB,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACzBzB,OAAA;MAAKwB,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC7BzB,OAAA;QAAO0B,OAAO,EAAC,cAAc;QAAAD,QAAA,EAAC;MAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC3C9B,OAAA;QACE+B,EAAE,EAAC,cAAc;QACjBC,KAAK,EAAE7B,aAAc;QACrB8B,QAAQ,EAAGC,CAAC,IAAK7B,aAAa,CAAC6B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAAAP,QAAA,EAE9ClB,MAAM,CAACE,GAAG,CAACS,KAAK,iBACflB,OAAA;UAAoBgC,KAAK,EAAEd,KAAM;UAAAO,QAAA,EAC9BR,WAAW,CAACC,KAAK;QAAC,GADRA,KAAK;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CACT;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAEN9B,OAAA;MAAKwB,SAAS,EAAC,WAAW;MAAAC,QAAA,EACvBb,iBAAiB,CAACH,GAAG,CAACC,IAAI,iBACzBV,OAAA;QAEEwB,SAAS,EAAE,YAAYpB,YAAY,KAAKM,IAAI,GAAG,QAAQ,GAAG,EAAE,EAAG;QAC/D0B,OAAO,EAAEA,CAAA,KAAM9B,YAAY,CAACI,IAAI,CAAE;QAAAe,QAAA,EAEjCH,UAAU,CAACZ,IAAI;MAAC,GAJZA,IAAI;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKH,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACO,EAAA,GAnDIpC,UAAqC;AAqD3C,eAAeA,UAAU;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}