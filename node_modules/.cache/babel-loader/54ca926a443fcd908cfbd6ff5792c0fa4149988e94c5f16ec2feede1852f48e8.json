{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding\\\\chinesestudy\\\\src\\\\components\\\\SentenceCard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport WordCard from './WordCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SentenceCard = ({\n  sentence\n}) => {\n  _s();\n  const [showDetails, setShowDetails] = useState(false);\n  const [showWords, setShowWords] = useState(false);\n  const toggleDetails = () => {\n    setShowDetails(!showDetails);\n  };\n  const toggleWords = () => {\n    setShowWords(!showWords);\n  };\n  const playAudio = async event => {\n    event.stopPropagation(); // 부모 클릭 이벤트 방지\n\n    const text = sentence.sentence;\n    try {\n      // 1. ResponsiveVoice API 시도 (네이버 앱 브라우저 지원)\n      if (window.responsiveVoice) {\n        window.responsiveVoice.speak(text, \"Chinese Female\", {\n          rate: 0.9,\n          pitch: 1,\n          volume: 1\n        });\n        return;\n      }\n\n      // 2. Web Speech API 시도\n      if ('speechSynthesis' in window) {\n        const utterance = new SpeechSynthesisUtterance(text);\n        utterance.lang = 'zh-CN';\n        utterance.rate = 0.9;\n        window.speechSynthesis.speak(utterance);\n        return;\n      }\n\n      // 3. 모든 방법이 실패하면 Google Translate 페이지로 이동\n      const googleTranslateUrl = `https://translate.google.com/?sl=zh-CN&tl=ko&text=${encodeURIComponent(text)}&op=translate`;\n\n      // 새 창으로 열기 (사용자가 직접 스피커 버튼 클릭 가능)\n      const userConfirmed = window.confirm('Chrome이나 Safari, EDGE에서 접속하세요. 다른 브라우저에서는 음성 재생이 지원되지 않습니다. Google 번역 페이지로 이동하여 음성을 재생하시겠습니까?');\n      if (userConfirmed) {\n        window.open(googleTranslateUrl, '_blank');\n      }\n    } catch (error) {\n      console.error('Audio playback error:', error);\n      // alert 대신 console.error 사용 (또는 사용자 정의 알림 컴포넌트)\n      console.error('음성 재생에 실패했습니다. 브라우저를 Chrome이나 Safari로 변경해보세요.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sentence-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"sentence-number\",\n      children: [\" \", sentence.id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chinese-sentence-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chinese-sentence\",\n        onClick: toggleDetails,\n        style: {\n          cursor: 'pointer'\n        },\n        children: sentence.sentence\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"audio-button\",\n        onClick: playAudio,\n        title: \"\\uC74C\\uC131 \\uC7AC\\uC0DD\",\n        children: \"\\uD83D\\uDD0A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `sentence-details ${showDetails ? 'expanded' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pinyin\",\n        children: sentence.pinyin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"meanings\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"meaning-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"meaning-label\",\n            children: \"\\uD83C\\uDDF0\\uD83C\\uDDF7 \\uD55C\\uAD6D\\uC5B4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"meaning-text\",\n            children: sentence['meaning-korean']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"meaning-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"meaning-label\",\n            children: \"\\uD83C\\uDDFA\\uD83C\\uDDF8 English\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"meaning-text\",\n            children: sentence['meaning-english']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"words-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"words-toggle\",\n          onClick: toggleWords,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"words-title\",\n            children: [\"\\uD83D\\uDCDA \\uB2E8\\uC5B4 \\uD559\\uC2B5 (\", sentence.words.length, \"\\uAC1C)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `toggle-arrow ${showWords ? 'expanded' : ''}`,\n            children: \"\\u25BC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `words-content ${showWords ? 'expanded' : ''}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"words-grid\",\n            children: sentence.words.map((word, index) => /*#__PURE__*/_jsxDEV(WordCard, {\n              word: word\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(SentenceCard, \"RY/DWepl9XUvE3vyCsaGI/3eAvo=\");\n_c = SentenceCard;\nexport default SentenceCard;\nvar _c;\n$RefreshReg$(_c, \"SentenceCard\");","map":{"version":3,"names":["React","useState","WordCard","jsxDEV","_jsxDEV","SentenceCard","sentence","_s","showDetails","setShowDetails","showWords","setShowWords","toggleDetails","toggleWords","playAudio","event","stopPropagation","text","window","responsiveVoice","speak","rate","pitch","volume","utterance","SpeechSynthesisUtterance","lang","speechSynthesis","googleTranslateUrl","encodeURIComponent","userConfirmed","confirm","open","error","console","className","children","id","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","cursor","type","title","pinyin","words","length","map","word","index","_c","$RefreshReg$"],"sources":["D:/Coding/chinesestudy/src/components/SentenceCard.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Sentence } from '../types';\nimport WordCard from './WordCard';\n\ninterface SentenceCardProps {\n  sentence: Sentence;\n}\n\nconst SentenceCard: React.FC<SentenceCardProps> = ({ sentence }) => {\n  const [showDetails, setShowDetails] = useState(false);\n  const [showWords, setShowWords] = useState(false);\n\n  const toggleDetails = () => {\n    setShowDetails(!showDetails);\n  };\n\n  const toggleWords = () => {\n    setShowWords(!showWords);\n  };\n\n  const playAudio = async (event: React.MouseEvent) => {\n    event.stopPropagation(); // 부모 클릭 이벤트 방지\n    \n    const text = sentence.sentence;\n    \n    try {\n      // 1. ResponsiveVoice API 시도 (네이버 앱 브라우저 지원)\n      if ((window as any).responsiveVoice) {\n        (window as any).responsiveVoice.speak(text, \"Chinese Female\", {\n          rate: 0.9,\n          pitch: 1,\n          volume: 1\n        });\n        return;\n      }\n      \n      // 2. Web Speech API 시도\n      if ('speechSynthesis' in window) {\n        const utterance = new SpeechSynthesisUtterance(text);\n        utterance.lang = 'zh-CN';\n        utterance.rate = 0.9;\n        window.speechSynthesis.speak(utterance);\n        return;\n      }\n      \n      // 3. 모든 방법이 실패하면 Google Translate 페이지로 이동\n      const googleTranslateUrl = `https://translate.google.com/?sl=zh-CN&tl=ko&text=${encodeURIComponent(text)}&op=translate`;\n      \n      // 새 창으로 열기 (사용자가 직접 스피커 버튼 클릭 가능)\n      const userConfirmed = (window as any).confirm('Chrome이나 Safari, EDGE에서 접속하세요. 다른 브라우저에서는 음성 재생이 지원되지 않습니다. Google 번역 페이지로 이동하여 음성을 재생하시겠습니까?');\n      if (userConfirmed) {\n        (window as any).open(googleTranslateUrl, '_blank');\n      }\n      \n    } catch (error) {\n      console.error('Audio playback error:', error);\n      // alert 대신 console.error 사용 (또는 사용자 정의 알림 컴포넌트)\n      console.error('음성 재생에 실패했습니다. 브라우저를 Chrome이나 Safari로 변경해보세요.');\n    }\n  };\n\n  return (\n    <div className=\"sentence-card\">\n      <span className=\"sentence-number\"> {sentence.id}</span>\n      <div className=\"chinese-sentence-container\">\n        <div className=\"chinese-sentence\" onClick={toggleDetails} style={{cursor: 'pointer'}}>\n          {sentence.sentence}\n        </div>\n        <button \n          type=\"button\"\n          className=\"audio-button\" \n          onClick={playAudio}\n          title=\"음성 재생\"\n        >\n          🔊\n        </button>\n      </div>\n      \n      <div className={`sentence-details ${showDetails ? 'expanded' : ''}`}>\n        <div className=\"pinyin\">{sentence.pinyin}</div>\n        \n        <div className=\"meanings\">\n          <div className=\"meaning-item\">\n            <div className=\"meaning-label\">🇰🇷 한국어</div>\n            <div className=\"meaning-text\">{sentence['meaning-korean']}</div>\n          </div>\n          <div className=\"meaning-item\">\n            <div className=\"meaning-label\">🇺🇸 English</div>\n            <div className=\"meaning-text\">{sentence['meaning-english']}</div>\n          </div>\n        </div>\n        \n        <div className=\"words-section\">\n          <div className=\"words-toggle\" onClick={toggleWords}>\n            <div className=\"words-title\">📚 단어 학습 ({sentence.words.length}개)</div>\n            <span className={`toggle-arrow ${showWords ? 'expanded' : ''}`}>\n              ▼\n            </span>\n          </div>\n          <div className={`words-content ${showWords ? 'expanded' : ''}`}>\n            <div className=\"words-grid\">\n              {sentence.words.map((word, index) => (\n                <WordCard key={index} word={word} />\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SentenceCard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}