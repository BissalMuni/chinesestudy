{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding\\\\chinesestudy\\\\src\\\\components\\\\SentenceCard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport WordCard from './WordCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SentenceCard = ({\n  sentence\n}) => {\n  _s();\n  const [showWords, setShowWords] = useState(false);\n  const toggleWords = () => {\n    setShowWords(!showWords);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sentence-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"sentence-number\",\n      children: [\"\\uBB38\\uC7A5 \", sentence.id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chinese-sentence\",\n      children: sentence.sentence\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pinyin\",\n      children: sentence.pinyin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"meanings\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"meaning-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"meaning-label\",\n          children: \"\\uD83C\\uDDF0\\uD83C\\uDDF7 \\uD55C\\uAD6D\\uC5B4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"meaning-text\",\n          children: sentence['meaning-korean']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"meaning-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"meaning-label\",\n          children: \"\\uD83C\\uDDFA\\uD83C\\uDDF8 English\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"meaning-text\",\n          children: sentence['meaning-english']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"words-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"words-toggle\",\n        onClick: toggleWords,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"words-title\",\n          children: [\"\\uD83D\\uDCDA \\uB2E8\\uC5B4 \\uD559\\uC2B5 (\", sentence.words.length, \"\\uAC1C)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `toggle-arrow ${showWords ? 'expanded' : ''}`,\n          children: \"\\u25BC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `words-content ${showWords ? 'expanded' : ''}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"words-grid\",\n          children: sentence.words.map((word, index) => /*#__PURE__*/_jsxDEV(WordCard, {\n            word: word\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(SentenceCard, \"NysC5Chhb6h8QvPrHbR2AtcdaEU=\");\n_c = SentenceCard;\nexport default SentenceCard;\nvar _c;\n$RefreshReg$(_c, \"SentenceCard\");","map":{"version":3,"names":["React","useState","WordCard","jsxDEV","_jsxDEV","SentenceCard","sentence","_s","showWords","setShowWords","toggleWords","className","children","id","fileName","_jsxFileName","lineNumber","columnNumber","pinyin","onClick","words","length","map","word","index","_c","$RefreshReg$"],"sources":["D:/Coding/chinesestudy/src/components/SentenceCard.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Sentence } from '../types';\nimport WordCard from './WordCard';\n\ninterface SentenceCardProps {\n  sentence: Sentence;\n}\n\nconst SentenceCard: React.FC<SentenceCardProps> = ({ sentence }) => {\n  const [showWords, setShowWords] = useState(false);\n\n  const toggleWords = () => {\n    setShowWords(!showWords);\n  };\n\n  return (\n    <div className=\"sentence-card\">\n      <span className=\"sentence-number\">ë¬¸ìž¥ {sentence.id}</span>\n      <div className=\"chinese-sentence\">{sentence.sentence}</div>\n      <div className=\"pinyin\">{sentence.pinyin}</div>\n      \n      <div className=\"meanings\">\n        <div className=\"meaning-item\">\n          <div className=\"meaning-label\">ðŸ‡°ðŸ‡· í•œêµ­ì–´</div>\n          <div className=\"meaning-text\">{sentence['meaning-korean']}</div>\n        </div>\n        <div className=\"meaning-item\">\n          <div className=\"meaning-label\">ðŸ‡ºðŸ‡¸ English</div>\n          <div className=\"meaning-text\">{sentence['meaning-english']}</div>\n        </div>\n      </div>\n      \n      <div className=\"words-section\">\n        <div className=\"words-toggle\" onClick={toggleWords}>\n          <div className=\"words-title\">ðŸ“š ë‹¨ì–´ í•™ìŠµ ({sentence.words.length}ê°œ)</div>\n          <span className={`toggle-arrow ${showWords ? 'expanded' : ''}`}>\n            â–¼\n          </span>\n        </div>\n        <div className={`words-content ${showWords ? 'expanded' : ''}`}>\n          <div className=\"words-grid\">\n            {sentence.words.map((word, index) => (\n              <WordCard key={index} word={word} />\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SentenceCard;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMlC,MAAMC,YAAyC,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAClE,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMS,WAAW,GAAGA,CAAA,KAAM;IACxBD,YAAY,CAAC,CAACD,SAAS,CAAC;EAC1B,CAAC;EAED,oBACEJ,OAAA;IAAKO,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5BR,OAAA;MAAMO,SAAS,EAAC,iBAAiB;MAAAC,QAAA,GAAC,eAAG,EAACN,QAAQ,CAACO,EAAE;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACzDb,OAAA;MAAKO,SAAS,EAAC,kBAAkB;MAAAC,QAAA,EAAEN,QAAQ,CAACA;IAAQ;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC3Db,OAAA;MAAKO,SAAS,EAAC,QAAQ;MAAAC,QAAA,EAAEN,QAAQ,CAACY;IAAM;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAE/Cb,OAAA;MAAKO,SAAS,EAAC,UAAU;MAAAC,QAAA,gBACvBR,OAAA;QAAKO,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAC3BR,OAAA;UAAKO,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAC;QAAQ;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC7Cb,OAAA;UAAKO,SAAS,EAAC,cAAc;UAAAC,QAAA,EAAEN,QAAQ,CAAC,gBAAgB;QAAC;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7D,CAAC,eACNb,OAAA;QAAKO,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAC3BR,OAAA;UAAKO,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAC;QAAY;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACjDb,OAAA;UAAKO,SAAS,EAAC,cAAc;UAAAC,QAAA,EAAEN,QAAQ,CAAC,iBAAiB;QAAC;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9D,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAENb,OAAA;MAAKO,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5BR,OAAA;QAAKO,SAAS,EAAC,cAAc;QAACQ,OAAO,EAAET,WAAY;QAAAE,QAAA,gBACjDR,OAAA;UAAKO,SAAS,EAAC,aAAa;UAAAC,QAAA,GAAC,0CAAU,EAACN,QAAQ,CAACc,KAAK,CAACC,MAAM,EAAC,SAAE;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACtEb,OAAA;UAAMO,SAAS,EAAE,gBAAgBH,SAAS,GAAG,UAAU,GAAG,EAAE,EAAG;UAAAI,QAAA,EAAC;QAEhE;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eACNb,OAAA;QAAKO,SAAS,EAAE,iBAAiBH,SAAS,GAAG,UAAU,GAAG,EAAE,EAAG;QAAAI,QAAA,eAC7DR,OAAA;UAAKO,SAAS,EAAC,YAAY;UAAAC,QAAA,EACxBN,QAAQ,CAACc,KAAK,CAACE,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC9BpB,OAAA,CAACF,QAAQ;YAAaqB,IAAI,EAAEA;UAAK,GAAlBC,KAAK;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAe,CACpC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACV,EAAA,CAzCIF,YAAyC;AAAAoB,EAAA,GAAzCpB,YAAyC;AA2C/C,eAAeA,YAAY;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}