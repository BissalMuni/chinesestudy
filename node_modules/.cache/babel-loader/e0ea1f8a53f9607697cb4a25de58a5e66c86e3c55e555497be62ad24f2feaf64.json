{"ast":null,"code":"import React from'react';import{isCategoryContent}from'../types';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Navigation=_ref=>{let{availableDates,pastMonths,presentMonths,selectedMonth,selectedDate,selectedCategory,sentenceData,isDateBased,lastSelectedFolder,lastSelectedMonth,onMonthChange,onDateChange,onCategoryChange,onPastMonthChange,onPresentMonthChange}=_ref;const currentMonthDates=availableDates.filter(date=>date.startsWith(selectedMonth));// Get categories for category-based structure\nconst categories=(sentenceData===null||sentenceData===void 0?void 0:sentenceData.contents.filter(isCategoryContent).map(content=>content.category))||[];const formatMonth=month=>{const[year,monthNum]=month.split('-');return\"\".concat(year,\"\\uB144 \").concat(monthNum,\"\\uC6D4\");};const formatDate=date=>{const day=date.split('-')[2];return\"\".concat(day,\"\\uC77C\");};return/*#__PURE__*/_jsxs(\"nav\",{className:\"navigation\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"selectors-container\",children:[pastMonths.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"past-month-selector\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"past-month-select\",className:\"visually-hidden\",children:\"\\uACFC\\uAC70 \\uC790\\uB8CC\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"past-month-select\",value:lastSelectedFolder==='past'?lastSelectedMonth:\"\",onChange:e=>e.target.value&&onPastMonthChange(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"\\uACFC\\uAC70 \\uC790\\uB8CC\"}),pastMonths.map(month=>/*#__PURE__*/_jsx(\"option\",{value:month,children:formatMonth(month)},month))]})]}),presentMonths.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"present-month-selector\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"present-month-select\",className:\"visually-hidden\",children:\"\\uD604\\uC7AC \\uD559\\uC2B5\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"present-month-select\",value:lastSelectedFolder==='present'?lastSelectedMonth:\"\",onChange:e=>e.target.value&&onPresentMonthChange(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"\\uD604\\uC7AC \\uD559\\uC2B5\"}),presentMonths.map(month=>/*#__PURE__*/_jsx(\"option\",{value:month,children:formatMonth(month)},month))]})]})]}),isDateBased?/*#__PURE__*/// Date-based navigation (old format)\n_jsx(\"div\",{className:\"date-tabs\",children:currentMonthDates.map(date=>/*#__PURE__*/_jsx(\"button\",{className:\"date-tab \".concat(selectedDate===date?'active':''),onClick:()=>onDateChange(date),children:formatDate(date)},date))}):/*#__PURE__*/// Category-based navigation (new format)\n_jsxs(\"div\",{className:\"category-tabs\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"category-tab \".concat(selectedCategory==='전체'?'active':''),onClick:()=>onCategoryChange('전체'),children:\"\\uC804\\uCCB4\"}),categories.map(category=>/*#__PURE__*/_jsx(\"button\",{className:\"category-tab \".concat(selectedCategory===category?'active':''),onClick:()=>onCategoryChange(category),children:category},category))]})]});};export default Navigation;","map":{"version":3,"names":["React","isCategoryContent","jsx","_jsx","jsxs","_jsxs","Navigation","_ref","availableDates","pastMonths","presentMonths","selectedMonth","selectedDate","selectedCategory","sentenceData","isDateBased","lastSelectedFolder","lastSelectedMonth","onMonthChange","onDateChange","onCategoryChange","onPastMonthChange","onPresentMonthChange","currentMonthDates","filter","date","startsWith","categories","contents","map","content","category","formatMonth","month","year","monthNum","split","concat","formatDate","day","className","children","length","htmlFor","id","value","onChange","e","target","onClick"],"sources":["D:/Coding/chinesestudy/src/components/Navigation.tsx"],"sourcesContent":["import React from 'react';\nimport { SentenceData, isCategoryContent } from '../types';\n\ninterface NavigationProps {\n  availableDates: string[];\n  pastMonths: string[];\n  presentMonths: string[];\n  selectedMonth: string;\n  selectedDate: string;\n  selectedCategory: string;\n  sentenceData: SentenceData | null;\n  isDateBased: boolean;\n  lastSelectedFolder: string;\n  lastSelectedMonth: string;\n  onMonthChange: (month: string) => void;\n  onDateChange: (date: string) => void;\n  onCategoryChange: (category: string) => void;\n  onPastMonthChange: (month: string) => void;\n  onPresentMonthChange: (month: string) => void;\n}\n\nconst Navigation: React.FC<NavigationProps> = ({\n  availableDates,\n  pastMonths,\n  presentMonths,\n  selectedMonth,\n  selectedDate,\n  selectedCategory,\n  sentenceData,\n  isDateBased,\n  lastSelectedFolder,\n  lastSelectedMonth,\n  onMonthChange,\n  onDateChange,\n  onCategoryChange,\n  onPastMonthChange,\n  onPresentMonthChange,\n}) => {\n  const currentMonthDates = availableDates.filter(date => date.startsWith(selectedMonth));\n\n  // Get categories for category-based structure\n  const categories = sentenceData?.contents\n    .filter(isCategoryContent)\n    .map(content => content.category) || [];\n\n  const formatMonth = (month: string) => {\n    const [year, monthNum] = month.split('-');\n    return `${year}년 ${monthNum}월`;\n  };\n\n  const formatDate = (date: string) => {\n    const day = date.split('-')[2];\n    return `${day}일`;\n  };\n\n  return (\n    <nav className=\"navigation\">\n      <div className=\"selectors-container\">\n        {pastMonths.length > 0 && (\n          <div className=\"past-month-selector\">\n            <label htmlFor=\"past-month-select\" className=\"visually-hidden\">과거 자료</label>\n            <select\n              id=\"past-month-select\"\n              value={lastSelectedFolder === 'past' ? lastSelectedMonth : \"\"}\n              onChange={(e) => e.target.value && onPastMonthChange(e.target.value)}\n            >\n              <option value=\"\">과거 자료</option>\n              {pastMonths.map(month => (\n                <option key={month} value={month}>\n                  {formatMonth(month)}\n                </option>\n              ))}\n            </select>\n          </div>\n        )}\n        \n        {presentMonths.length > 0 && (\n          <div className=\"present-month-selector\">\n            <label htmlFor=\"present-month-select\" className=\"visually-hidden\">현재 학습</label>\n            <select\n              id=\"present-month-select\"\n              value={lastSelectedFolder === 'present' ? lastSelectedMonth : \"\"}\n              onChange={(e) => e.target.value && onPresentMonthChange(e.target.value)}\n            >\n              <option value=\"\">현재 학습</option>\n              {presentMonths.map(month => (\n                <option key={month} value={month}>\n                  {formatMonth(month)}\n                </option>\n              ))}\n            </select>\n          </div>\n        )}\n      </div>\n\n      {isDateBased ? (\n        // Date-based navigation (old format)\n        <div className=\"date-tabs\">\n          {currentMonthDates.map(date => (\n            <button\n              key={date}\n              className={`date-tab ${selectedDate === date ? 'active' : ''}`}\n              onClick={() => onDateChange(date)}\n            >\n              {formatDate(date)}\n            </button>\n          ))}\n        </div>\n      ) : (\n        // Category-based navigation (new format)\n        <div className=\"category-tabs\">\n          <button\n            className={`category-tab ${selectedCategory === '전체' ? 'active' : ''}`}\n            onClick={() => onCategoryChange('전체')}\n          >\n            전체\n          </button>\n          {categories.map(category => (\n            <button\n              key={category}\n              className={`category-tab ${selectedCategory === category ? 'active' : ''}`}\n              onClick={() => onCategoryChange(category)}\n            >\n              {category}\n            </button>\n          ))}\n        </div>\n      )}\n    </nav>\n  );\n};\n\nexport default Navigation;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}