{"ast":null,"code":"import React from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Navigation=_ref=>{let{availableDates,selectedMonth,selectedDate,onMonthChange,onDateChange}=_ref;const months=[...new Set(availableDates.map(date=>date.substring(0,7)))];// 2025-08\nconst currentMonthDates=availableDates.filter(date=>date.startsWith(selectedMonth));const formatMonth=month=>{const[year,monthNum]=month.split('-');return\"\".concat(year,\"\\uB144 \").concat(monthNum,\"\\uC6D4\");};const formatDate=date=>{const day=date.split('-')[2];return\"\".concat(day,\"\\uC77C\");};return/*#__PURE__*/_jsxs(\"nav\",{className:\"navigation\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"month-selector\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"month-select\",children:\"Month\"}),/*#__PURE__*/_jsx(\"select\",{id:\"month-select\",value:selectedMonth,onChange:e=>onMonthChange(e.target.value),children:months.map(month=>/*#__PURE__*/_jsx(\"option\",{value:month,children:formatMonth(month)},month))})]}),/*#__PURE__*/_jsx(\"div\",{className:\"date-tabs\",children:currentMonthDates.map(date=>/*#__PURE__*/_jsx(\"button\",{className:\"date-tab \".concat(selectedDate===date?'active':''),onClick:()=>onDateChange(date),children:formatDate(date)},date))})]});};export default Navigation;","map":{"version":3,"names":["React","jsx","_jsx","jsxs","_jsxs","Navigation","_ref","availableDates","selectedMonth","selectedDate","onMonthChange","onDateChange","months","Set","map","date","substring","currentMonthDates","filter","startsWith","formatMonth","month","year","monthNum","split","concat","formatDate","day","className","children","htmlFor","id","value","onChange","e","target","onClick"],"sources":["D:/Coding/chinesestudy/src/components/Navigation.tsx"],"sourcesContent":["import React from 'react';\n\ninterface NavigationProps {\n  availableDates: string[];\n  selectedMonth: string;\n  selectedDate: string;\n  onMonthChange: (month: string) => void;\n  onDateChange: (date: string) => void;\n}\n\nconst Navigation: React.FC<NavigationProps> = ({\n  availableDates,\n  selectedMonth,\n  selectedDate,\n  onMonthChange,\n  onDateChange,\n}) => {\n  const months = [...new Set(availableDates.map(date => date.substring(0, 7)))]; // 2025-08\n  const currentMonthDates = availableDates.filter(date => date.startsWith(selectedMonth));\n\n  const formatMonth = (month: string) => {\n    const [year, monthNum] = month.split('-');\n    return `${year}년 ${monthNum}월`;\n  };\n\n  const formatDate = (date: string) => {\n    const day = date.split('-')[2];\n    return `${day}일`;\n  };\n\n  return (\n    <nav className=\"navigation\">\n      <div className=\"month-selector\">\n        <label htmlFor=\"month-select\">Month</label>\n        <select \n          id=\"month-select\"\n          value={selectedMonth} \n          onChange={(e) => onMonthChange(e.target.value)}\n        >\n          {months.map(month => (\n            <option key={month} value={month}>\n              {formatMonth(month)}\n            </option>\n          ))}\n        </select>\n      </div>\n      \n      <div className=\"date-tabs\">\n        {currentMonthDates.map(date => (\n          <button\n            key={date}\n            className={`date-tab ${selectedDate === date ? 'active' : ''}`}\n            onClick={() => onDateChange(date)}\n          >\n            {formatDate(date)}\n          </button>\n        ))}\n      </div>\n    </nav>\n  );\n};\n\nexport default Navigation;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAU1B,KAAM,CAAAC,UAAqC,CAAGC,IAAA,EAMxC,IANyC,CAC7CC,cAAc,CACdC,aAAa,CACbC,YAAY,CACZC,aAAa,CACbC,YACF,CAAC,CAAAL,IAAA,CACC,KAAM,CAAAM,MAAM,CAAG,CAAC,GAAG,GAAI,CAAAC,GAAG,CAACN,cAAc,CAACO,GAAG,CAACC,IAAI,EAAIA,IAAI,CAACC,SAAS,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAE;AAC/E,KAAM,CAAAC,iBAAiB,CAAGV,cAAc,CAACW,MAAM,CAACH,IAAI,EAAIA,IAAI,CAACI,UAAU,CAACX,aAAa,CAAC,CAAC,CAEvF,KAAM,CAAAY,WAAW,CAAIC,KAAa,EAAK,CACrC,KAAM,CAACC,IAAI,CAAEC,QAAQ,CAAC,CAAGF,KAAK,CAACG,KAAK,CAAC,GAAG,CAAC,CACzC,SAAAC,MAAA,CAAUH,IAAI,YAAAG,MAAA,CAAKF,QAAQ,WAC7B,CAAC,CAED,KAAM,CAAAG,UAAU,CAAIX,IAAY,EAAK,CACnC,KAAM,CAAAY,GAAG,CAAGZ,IAAI,CAACS,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAC9B,SAAAC,MAAA,CAAUE,GAAG,WACf,CAAC,CAED,mBACEvB,KAAA,QAAKwB,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBzB,KAAA,QAAKwB,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC7B3B,IAAA,UAAO4B,OAAO,CAAC,cAAc,CAAAD,QAAA,CAAC,OAAK,CAAO,CAAC,cAC3C3B,IAAA,WACE6B,EAAE,CAAC,cAAc,CACjBC,KAAK,CAAExB,aAAc,CACrByB,QAAQ,CAAGC,CAAC,EAAKxB,aAAa,CAACwB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAAAH,QAAA,CAE9CjB,MAAM,CAACE,GAAG,CAACO,KAAK,eACfnB,IAAA,WAAoB8B,KAAK,CAAEX,KAAM,CAAAQ,QAAA,CAC9BT,WAAW,CAACC,KAAK,CAAC,EADRA,KAEL,CACT,CAAC,CACI,CAAC,EACN,CAAC,cAENnB,IAAA,QAAK0B,SAAS,CAAC,WAAW,CAAAC,QAAA,CACvBZ,iBAAiB,CAACH,GAAG,CAACC,IAAI,eACzBb,IAAA,WAEE0B,SAAS,aAAAH,MAAA,CAAchB,YAAY,GAAKM,IAAI,CAAG,QAAQ,CAAG,EAAE,CAAG,CAC/DqB,OAAO,CAAEA,CAAA,GAAMzB,YAAY,CAACI,IAAI,CAAE,CAAAc,QAAA,CAEjCH,UAAU,CAACX,IAAI,CAAC,EAJZA,IAKC,CACT,CAAC,CACC,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAV,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}